use Modern::Perl;

# set up Devel::REPL
{
				use Term::ANSIColor;

				my @plugins = (
												'ReadLineHistory', # history saved across sessions
												'Refresh', # refresh before every eval
												'Colors', # colorize return value and errors
												'Editor', # #e to edit code in vim
												'FancyPrompt', # provide an irb-like prompt
												'Interrupt', # improve handling of ^C
#'LoadClass', # automatically load unloaded classes
												'MultiLine::PPI', # allow multiple lines
												'Nopaste', # paste session with #nopaste
												'OutputCache', # access previous results
												'Peek', # Devel::Peek support
												'ReadLineHistory', # history saved across sessions
#'Time', # time specific commands

												'Completion',
												'CompletionDriver::Globals', # global variables
												'CompletionDriver::INC', # loading new modules
												'CompletionDriver::Keywords', # substr, while, etc
												'CompletionDriver::LexEnv', # current environment
												'CompletionDriver::Methods', # class method completion
												'CompletionDriver::Turtles', # turtle command completion
												);

				$_REPL->load_plugin($_) for @plugins;

				$_REPL->fancy_prompt(sub {
												my $self = shift;
												$self->current_package . '(0)'
												. '> '
												} );
				$_REPL->fancy_continuation_prompt(sub {
												my $self = shift;
												$self->current_package
												. '(' . $self->line_depth . ')'
												. '> ' . (' ' x ($self->line_depth * 2))
												});

				$Devel::REPL::Plugin::Packages::PKG_SAVE = 'main';
}

# set up the default environment
{
				package main;

				use List::Util qw(first max maxstr min minstr reduce shuffle sum);
				use List::MoreUtils ':all';
				use Scalar::Util qw(blessed weaken isweak);
				use Path::Class;
				use File::Slurp;

				use Term::ANSIColor;
				$ENV{'EDITOR'} = "/usr/bin/vim";
				$ENV{'DBIC_TRACE_PROFILE'} = "console";

        use lib './lib';
}


